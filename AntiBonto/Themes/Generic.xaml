<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:view="clr-namespace:AntiBonto.View"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop">

    <!-- Definition of the drag-and-drop enabled ItemsControl -->
    <view:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter"/>
    <view:PersonTypeToColorConverter x:Key="PersonTypeToColorConverter"/>
    <DataTemplate x:Key="adorner">
        <Label Content="{Binding Name}" Margin="0,0,5,5" Padding="3" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </DataTemplate>
    <Style TargetType="{x:Type view:DnDItemsControl}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Label Content="{Binding Name}" Margin="0,0,5,5" Padding="3" Name="PersonButton" 
                           Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                        <Label.Resources>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding KiscsoportView, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                        <Setter Property="FontWeight" Value="{Binding Kiscsoportvezeto, Converter={StaticResource BoolToFontWeightConverter}}"/>
                                        <Setter Property="Foreground" Value="{Binding Type, Converter={StaticResource PersonTypeToColorConverter}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Resources>
                    </Label>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:DnDItemsControl}">
                    <!-- Background="White" needed for drop to work -->
                    <Border BorderThickness="1" CornerRadius="3" BorderBrush="Gray" Padding="5" Background="White">
                        <ItemsPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dd:DragDrop.IsDragSource" Value="True"/>
        <Setter Property="dd:DragDrop.IsDropTarget" Value="True"/>
        <Setter Property="dd:DragDrop.DragAdornerTemplate" Value="{StaticResource adorner}"/>
    </Style>

    <Style TargetType="{x:Type view:MaterialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Fill="Red"/>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="+" Margin="0,-7,0,0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="20pt"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
        <Setter Property="Height" Value="40"/>
    </Style>
</ResourceDictionary>
