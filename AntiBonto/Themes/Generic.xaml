<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:view="clr-namespace:AntiBonto.View"
    xmlns:main="clr-namespace:AntiBonto"
    xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop">

    <!-- Definition of the drag-and-drop enabled ItemsControl -->
    <DataTemplate x:Key="adorner">
        <Label Content="{Binding Name}" Margin="0,0,5,5" Padding="3" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </DataTemplate>
    <Style TargetType="{x:Type view:DnDItemsControl}">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Label Content="{Binding Name}" Margin="0,0,5,5" Padding="3" Name="PersonButton" BorderThickness="2">
                        <Label.Style>
                            <Style TargetType="Label">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding BoldKiscsoportvezetok, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True"/>
                                            <Condition Binding="{Binding Kiscsoportvezeto}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding BoldAlvocsoportvezetok, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True"/>
                                            <Condition Binding="{Binding Alvocsoportvezeto}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ColorUjoncs, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True"/>
                                            <Condition Binding="{Binding Type}" Value="{x:Static main:PersonType.Ujonc}"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="Green"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding ColorKiscsoports, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <MultiBinding>
                                                    <MultiBinding.Converter>
                                                        <view:KiscsoportColorConverter/>
                                                    </MultiBinding.Converter>
                                                    <Binding />
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ColorKiscsoports, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding VisualizeConflicts, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" Value="True">
                                        <Setter Property="BorderBrush">
                                            <Setter.Value>
                                                <MultiBinding>
                                                    <MultiBinding.Converter>
                                                        <view:ConflictBorderConverter/>
                                                    </MultiBinding.Converter>
                                                    <Binding />
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}"/>
                                                </MultiBinding>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Label.Style>
                    </Label>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="dd:DragDrop.IsDragSource" Value="True"/>
        <Setter Property="dd:DragDrop.IsDropTarget" Value="True"/>
        <Setter Property="dd:DragDrop.DragAdornerTemplate" Value="{StaticResource adorner}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:DnDItemsControl}">
                    <DockPanel LastChildFill="True">
                        <ContentPresenter ContentSource="Header" Margin="2,0,2,5" DockPanel.Dock="Top"/>
                        <!-- Background="White" needed for drop to work -->
                        <Border BorderThickness="1" CornerRadius="3" BorderBrush="Gray" Padding="5" Background="White">
                            <ItemsPresenter/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>       
    </Style>

    <!-- Definition of the Material Design button -->
    <Style TargetType="{x:Type view:MaterialButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="2.5" Direction="270" Color="#BBBBBB"/>
                        </Border.Effect>
                        <Grid Name="BorderContent" RenderTransformOrigin="0.5,0.5">
                            <Ellipse Fill="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <Grid.RenderTransform>
                                <RotateTransform/>
                            </Grid.RenderTransform>
                        </Grid>
                    </Border>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ButtonRotateAnimation">
                            <DoubleAnimation Storyboard.TargetName="BorderContent"
                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                             To="45" Duration="0:0:.2"/>
                        </Storyboard>
                        <Storyboard x:Key="ButtonRotateBackAnimation">
                            <DoubleAnimation Storyboard.TargetName="BorderContent" 
                             Storyboard.TargetProperty="(Grid.RenderTransform).(RotateTransform.Angle)"
                             To="0" Duration="0:0:.2"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Button.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" To="#EF5350" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Background.Color" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="+" Margin="0,-7,0,0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="20pt"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Red"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight}"/>
        <Setter Property="Height" Value="40"/>       
    </Style>
</ResourceDictionary>
